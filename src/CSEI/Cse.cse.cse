{
  "UnknownAccessorDeclaration":
  {
    "MatchChildKindTextsList":
    {
      "UnknownAccessorDeclaration":
      [
        [
          "UnknownAccessorDeclaration",
          "UnknownAccessorDeclaration"
        ]
      ]
    },
    "KindText": "UnknownAccessorDeclaration"
  },
  "WhitespaceTrivia":
  {
    "MatchTexts":
    {
      "WhitespaceTrivia":
      [
        " "
      ]
    },
    "MatchChildKindTextsList":
    {
      "WhitespaceTrivia":
      [
        [
          "WhitespaceTrivia",
          "WhitespaceTrivia"
        ]
      ]
    },
    "KindText": "WhitespaceTrivia"
  },
  "PlusToken":
  {
    "MatchTexts":
    {
      "PlusToken":
      [
        "\u002B"
      ]
    },
    "KindText": "PlusToken"
  },
  "MinusToken":
  {
    "MatchTexts":
    {
      "MinusToken":
      [
        "-"
      ]
    },
    "KindText": "MinusToken"
  },
  "AsteriskToken":
  {
    "MatchTexts":
    {
      "AsteriskToken":
      [
        "*"
      ]
    },
    "KindText": "AsteriskToken"
  },
  "SlashToken":
  {
    "MatchTexts":
    {
      "SlashToken":
      [
        "/"
      ]
    },
    "KindText": "SlashToken"
  },
  "DotToken":
  {
    "MatchTexts":
    {
      "DotToken":
      [
        "."
      ]
    },
    "KindText": "DotToken"
  },
  "OpenParenToken":
  {
    "MatchTexts":
    {
      "OpenParenToken":
      [
        "("
      ]
    },
    "KindText": "OpenParenToken"
  },
  "CloseParenToken":
  {
    "MatchTexts":
    {
      "CloseParenToken":
      [
        ")"
      ]
    },
    "KindText": "CloseParenToken"
  },
  "NumericLiteralToken":
  {
    "MatchTexts":
    {
      "IntNumericLiteralToken":
      [
        "0",
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "7",
        "8",
        "9"
      ]
    },
    "MatchChildKindTextsList":
    {
      "IntNumericLiteralToken":
      [
        [
          "IntNumericLiteralToken",
          "IntNumericLiteralToken"
        ]
      ],
      "DoubleNumericLiteralToken":
      [
        [
          "IntNumericLiteralToken",
          "DotToken",
          "IntNumericLiteralToken"
        ]
      ],
      "NegativeNumericLiteralToken":
      [
        [
          "MinusToken",
          "NumericLiteralToken"
        ]
      ]
    },
    "KindText": "NumericLiteralToken",
    "Expression":
    {
      "MethodName": "number.ToNumber"
    }
  },
  "AddExpression":
  {
    "MatchChildKindTextsList":
    {
      "AddExpression":
      [
        [
          "NumericLiteralToken",
          "PlusToken",
          "NumericLiteralToken"
        ],
        [
          "AddExpression",
          "PlusToken",
          "NumericLiteralToken"
        ]
      ]
    },
    "KindText": "AddExpression",
    "Expression":
    {
      "MethodName": "number.Add",
      "ChildValueIndexs":
      [
        0,
        2
      ]
    }
  },
  "SubtractExpression":
  {
    "MatchChildKindTextsList":
    {
      "SubtractExpression":
      [
        [
          "NumericLiteralToken",
          "MinusToken",
          "NumericLiteralToken"
        ],
        [
          "SubtractExpression",
          "MinusToken",
          "NumericLiteralToken"
        ]
      ]
    },
    "KindText": "SubtractExpression",
    "Expression":
    {
      "MethodName": "number.Subtract",
      "ChildValueIndexs":
      [
        0,
        2
      ]
    }
  },
  "MultiplyExpression":
  {
    "MatchChildKindTextsList":
    {
      "MultiplyExpression":
      [
        [
          "NumericLiteralToken",
          "AsteriskToken",
          "NumericLiteralToken"
        ],
        [
          "MultiplyExpression",
          "AsteriskToken",
          "NumericLiteralToken"
        ]
      ]
    },
    "KindText": "MultiplyExpression",
    "Expression":
    {
      "MethodName": "number.Multiply",
      "ChildValueIndexs":
      [
        0,
        2
      ]
    }
  },
  "DivideExpression":
  {
    "MatchChildKindTextsList":
    {
      "DivideExpression":
      [
        [
          "NumericLiteralToken",
          "SlashToken",
          "NumericLiteralToken"
        ],
        [
          "DivideExpression",
          "SlashToken",
          "NumericLiteralToken"
        ]
      ]
    },
    "KindText": "DivideExpression",
    "Expression":
    {
      "MethodName": "number.Divide",
      "ChildValueIndexs":
      [
        0,
        2
      ]
    }
  }
}